version: "3.9"

services:
  pinger:
    build: .
    container_name: pinger-app
    env_file:
      - .env
    ports:
      - "5123:5123"
    depends_on:
      - pg
      - mongo
    volumes:
      - .:/app
    networks:
      - pg_network
      - mongo_network

  pg:
    container_name: pinger-pg
    image: postgres:17.2
    env_file: .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$(cat /run/secrets/db_user) -d CockDB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - pg_network
    volumes:
      - pg_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pinger-pdadmin
    image: dpage/pgadmin4:8.13
    env_file:
      - .env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - pg_network

  mongo:
    image: mongo:7
    container_name: pinger-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - mongo_network

volumes:
  pg_data:
  mongo_data:
  pgadmin_data:

networks:
  pg_network:
    driver: bridge

  mongo_network:
    driver: bridge
